@page "/user/dashboard"
@using Booking.Web.Models
@using Booking.Web.Services.UserDashboard
@inject IBookingDetailsService _bookingService
<head>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>##My Booking Calander##</title>
    <style>
        body{
            display: flex;
            font-family: sans-serif;
            align-items: center;
        }
        .container-b {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 90vh;
            width: 90vw;
            /* border: 3px green solid; */
            border-radius: 10px;
            background-color: rgba(150, 182, 201, 0.745);
            padding: 5px;
        }

        .content-b {
            width: 90%;
            height: 80%;
            /* border: 3px solid #325c86; */
            padding: 5px;
        }

        .row-b {
            /* border: red 1px solid; */
            height: 16%;
        }

        .head-row-b {
            height: 12%;
        }

        .row-b, .head-row-b{
            display: flex;
            flex-direction: row;
            margin: 8px;
            justify-content: center;
            align-items: center;
        }

        .col-b {
            height: 100%;
            width: 14%;
            background-color: #e8e9ea;
            border-radius: 5px;
            /* border: blue 1px solid; */
            text-align: center;
            margin: 2px;
            justify-content: center;
            align-items: center;
        }

        .selected {
            border: 3px solid lime;
        }

        .col-b .col-container {
            height: 100%;
        }

        .col-container{
            display: flex;
            flex-direction: column;
        }

        .booked1 {
            background-color: rgba(221, 153, 126, 0.733);
        }

        .booked2 {
            background-color: rgba(228, 238, 88, 0.747);
        }

        .date-pad{
            background-color: #444
        }

        .date, .day {
            align-content: center;
            align-items: center;
            justify-content: center;
            text-align: center;
            overflow-wrap: break-word;
            flex-grow: 1;
        }
        .day{
            font-size: 24px;
        }
        .date{
            /* border: 2px solid blue; */
        }

        .type{
            padding: 3px;
            text-transform: uppercase;
            color: #4b080b;
        }
    </style>
</head>
<body>
    <div class="container-b">
        <h2>
            Booking of @GetMonthName(Bookings.Month) - @Bookings.Year
        </h2>
        <div class="content-b">
            <div class="head-row-b">
                <div class="col-b col-container"><div class="day">Sun</div></div>
                <div class="col-b col-container"><div class="day">Mon</div></div>
                <div class="col-b col-container"><div class="day">Tue</div></div>
                <div class="col-b col-container"><div class="day">Wed</div></div>
                <div class="col-b col-container"><div class="day">Thu</div></div>
                <div class="col-b col-container"><div class="day">Fri</div></div>
                <div class="col-b col-container"><div class="day">Sat</div></div>
            </div>
            @foreach(var gridRow in Grid)
            {
                <div class="row-b">
                    @foreach(var gridCol in gridRow)
                    {
                        <div class="col-b @gridCol.Style">
                            <div class="col-container">
                                <div class="date">
                                    @if(gridCol.Date != 0){
                                        @gridCol.Date
                                        @if (gridCol.booking != null)
                                        {
                                            <div class="type"><strong>@gridCol.booking.BookingType.Name</strong></div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>

    </div>
</body>

@code {
    private BookingDetails Bookings;
    // private IBookingDetailsService BookingService;
    private int NumberOfDays;
    private (int Date, Booking booking, string Style)[][] Grid;
    protected override async Task OnInitializedAsync()
    {
        Bookings = _bookingService.GetBookingDetails(1, DateTime.Now.Year);
        NumberOfDays = DateTime.DaysInMonth(Bookings.Year, Bookings.Month);
        GenerateGrid();
        await base.OnInitializedAsync();
    }

    private void GenerateGrid()
    {
        Grid = new (int Date, Booking booking, string Style)[5][];
        var dateCounter = 1;
        for (int row = 0; row < 5; row++)
        {
            Grid[row] = new (int Date, Booking booking, string Style)[7];
            var column = 0;
            DateTime date = new DateTime(Bookings.Year, Bookings.Month, 1);
            var dayOfWeek = (int)date.DayOfWeek;
            if (row == 0)
            {
                for (int paddingday = 0; paddingday < dayOfWeek; paddingday++)
                {
                    Grid[row][column] = (0, null, "date-pad");
                    column++;
                }
            }
            while (dateCounter <= NumberOfDays && column < 7)
            {
                Grid[row][column] = (dateCounter++, Bookings.Bookings.FirstOrDefault(x => x.BookingDate.Day == dateCounter), GetStyle(dateCounter));
                column++;
            }
            if (row == 4 && column < 7)
            {
                var remaining = 7 - column;
                for (int paddingday = 0; paddingday < remaining; paddingday++)
                {
                    Grid[row][column] = (0, null, "date-pad");
                    column++;
                }
            }
        }
    }

    private string GetMonthName(int month)
    {
        return System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month);
    }
    private string GetStyle(int day)
    {
        var dayBookingDetails = Bookings.Bookings.Where(x => x.BookingDate.Day == day).FirstOrDefault();
        if(dayBookingDetails != null){
            if(dayBookingDetails.BookingType.Name == "veg"){
                return "booked1";
            }
            else if(dayBookingDetails.BookingType.Name == "non-veg"){
                return "booked2";
            }
            else return string.Empty;
        }
        else
        return string.Empty;
    }
}

